---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: dask
  namespace: sandbox
  annotations:
    fluxcd.io/ignore: true   # temporarily make Flux ignore a manifest if set to true
    fluxcd.io/automated: true  # automated deployment of new container images
    fluxcd.io/tag.scheduler: semver:*
    fluxcd.io/tag.worker: semver:*
spec:
  releaseName: dask
  chart:
    # Helm Charts: https://github.com/opendatacube/datacube-charts/tree/master/stable/datacube-dask
    repository: https://opendatacube.github.io/datacube-charts/charts/
    name: datacube-dask
    version: 0.4.8
  valueFileSecrets:
    - name: dask
  values:
    image:
      # Docker Hub: https://hub.docker.com/r/opendatacube/dask
      # Source Repository: https://github.com/opendatacube/datacube-dask
      repository: "opendatacube/dask"
      tag: "gateway-0.1.0"
      pullPolicy: Always
    service:
      type: ClusterIP
      port: 8786
      bokehPort: 8787
      annotations:
        alb.ingress.kubernetes.io/healthcheck-path: /status
    worker:
      minReplicas: 0
      maxReplicas: 20
      targetCpu: 10
#      annotations:
#        iam.amazonaws.com/role: ${cluster_name}-wms
      args:
        - --memory-limit
        - '16GB'
        - --death-timeout
        - '60'
      resources:
        limits:
          memory: 16G
        requests:
          memory: 16G
          cpu: "0.5"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: nodetype
                  operator: In
                  values:
                    - spot
    database:
      database: ows
      host: database.local
      existingSecret: db
    ingress:
      enabled: true
      annotations:
        kubernetes.io/tls-acme: "true"
        alb.ingress.kubernetes.io/healthcheck-port: traffic-port
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/target-type: ip
        kubernetes.io/ingress.class: alb
#        alb.ingress.kubernetes.io/security-groups: "${cluster_name}-lb"
#        alb.ingress.kubernetes.io/certificate-arn: ${certificate_arn}
#      hosts:
#        - dask.${domain_name}
      path: /*